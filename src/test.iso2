let iso map f = function
  | None   <-> None
  | Some x <-> let y = f x in Some y
in

let iso swap = function
  | (x, y) <-> (y, x)
in

let a = map swap None in
let b = map swap (Some (3, 4)) in

let iso id = function x <-> x in

let iso f = function (a, (b, c), d) <-> (a, b, c, d) in

(a, b)

