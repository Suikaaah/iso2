type str = A of str | B of str | C of str | D of str
type value =
  | Unit
  | Named of str
  | Cted of (str, value)
  | Tuple of v_list

type v_list = VNil | `VCons of (value, v_list)
type ve_list = VENil | `VECons of ((value, expr), ve_list)

type expr =
  | Value of value
  | Let of (pat, fn, pat, expr)

type fn =
  | Pairs of ve_list
  | 

()
